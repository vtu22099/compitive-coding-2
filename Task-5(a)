#Insertion sort on singly linked list
import java.util.*;
class Node {
int data;
Node next;
public Node() {}
public Node(int data) { this.data = data; this.next = null; }
public Node(int data, Node next) { this.data = data; this.next = next; }
}
public class Main {
public static Node insertionSortList(Node head) {
Node dummy = new Node(0);
Node curr = head;
while (curr != null) {
Node next = curr.next;
Node pos = dummy;
while (pos.next != null && pos.next.data < curr.data) {
pos = pos.next;
}
curr.next = pos.next;
pos.next = curr;
curr = next;
}
return dummy.next;
}
public static Node array_to_LL(int[] arr) {
Node head = new Node(arr[0]);
Node cur = head;
for (int i = 1; i < arr.length; i++) {
cur.next = new Node(arr[i]);
cur = cur.next;
}
return head;
}
public static void printLinkedList(Node head) {
while (head != null) {
System.out.print(head.data + " ");
head = head.next;
}
System.out.println();
}
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
int n = scanner.nextInt();
int[] arr = new int[n];
for (int j = 0; j < n; j++) {
arr[j] = scanner.nextInt();
}
Node head = array_to_LL(arr);
Node sortedHead = insertionSortList(head);
printLinkedList(sortedHead);
scanner.close();
}
}
